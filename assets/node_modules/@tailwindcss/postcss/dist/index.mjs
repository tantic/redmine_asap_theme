var $=(o,r)=>(r=Symbol[o])?r:Symbol.for("Symbol."+o),U=o=>{throw TypeError(o)};var L=(o,r,n)=>{if(r!=null){typeof r!="object"&&typeof r!="function"&&U("Object expected");var e,s;n&&(e=r[$("asyncDispose")]),e===void 0&&(e=r[$("dispose")],n&&(s=e)),typeof e!="function"&&U("Object not disposable"),s&&(e=function(){try{s.call(this)}catch(t){return Promise.reject(t)}}),o.push([n,e,r])}else n&&o.push([n]);return r},V=(o,r,n)=>{var e=typeof SuppressedError=="function"?SuppressedError:function(i,l,c,p){return p=Error(c),p.name="SuppressedError",p.error=i,p.suppressed=l,p},s=i=>r=n?new e(i,r,"An error was suppressed during disposal"):(n=!0,i),t=i=>{for(;i=o.pop();)try{var l=i[1]&&i[1].call(i[2]);if(i[0])return Promise.resolve(l).then(t,c=>(s(c),t()))}catch(c){s(c)}if(n)throw r};return t()};import J from"@alloc/quick-lru";import{compileAst as Z,env as ee,Features as P,Instrumentation as te}from"@tailwindcss/node";import{clearRequireCache as se}from"@tailwindcss/node/require-cache";import{Scanner as re}from"@tailwindcss/oxide";import{Features as y,transform as ie}from"lightningcss";import ne from"node:fs";import m,{relative as M}from"node:path";import b from"postcss";var G=32;var j=40;function I(o,r=[]){for(let n=5;n<o.length;n++){let e=o.charCodeAt(n);if(e===G||e===j){let s=o.slice(0,n).trim(),t=o.slice(n).trim();return g(s,t,r)}}return g(o.trim(),"",r)}var q=64;function X(o,r=[]){return{kind:"rule",selector:o,nodes:r}}function g(o,r="",n=[]){return{kind:"at-rule",name:o,params:r,nodes:n}}function N(o,r=[]){return o.charCodeAt(0)===q?I(o,r):X(o,r)}function k(o,r,n=!1){return{kind:"declaration",property:o,value:r,important:n}}function v(o){return{kind:"comment",value:o}}function K(o){function r(e,s=0){let t="",i="  ".repeat(s);if(e.kind==="declaration")t+=`${i}${e.property}: ${e.value}${e.important?" !important":""};
`;else if(e.kind==="rule"){t+=`${i}${e.selector} {
`;for(let l of e.nodes)t+=r(l,s+1);t+=`${i}}
`}else if(e.kind==="at-rule"){if(e.nodes.length===0)return`${i}${e.name} ${e.params};
`;t+=`${i}${e.name}${e.params?` ${e.params} `:" "}{
`;for(let l of e.nodes)t+=r(l,s+1);t+=`${i}}
`}else if(e.kind==="comment")t+=`${i}/*${e.value}*/
`;else if(e.kind==="context"||e.kind==="at-root")return"";return t}let n="";for(let e of o){let s=r(e);s!==""&&(n+=s)}return n}import A from"postcss";var Y=33;function W(o,r){let n=A.root();n.source=r;function e(s,t){if(s.kind==="declaration"){let i=A.decl({prop:s.property,value:s.value??"",important:s.important});i.source=r,t.append(i)}else if(s.kind==="rule"){let i=A.rule({selector:s.selector});i.source=r,i.raws.semicolon=!0,t.append(i);for(let l of s.nodes)e(l,i)}else if(s.kind==="at-rule"){let i=A.atRule({name:s.name.slice(1),params:s.params});i.source=r,i.raws.semicolon=!0,t.append(i);for(let l of s.nodes)e(l,i)}else if(s.kind==="comment"){let i=A.comment({text:s.value});i.raws.left="",i.raws.right="",i.source=r,t.append(i)}else s.kind==="at-root"||s.kind}for(let s of o)e(s,n);return n}function D(o){function r(e,s){if(e.type==="decl")s.push(k(e.prop,e.value,e.important));else if(e.type==="rule"){let t=N(e.selector);e.each(i=>r(i,t.nodes)),s.push(t)}else if(e.type==="atrule"){let t=g(`@${e.name}`,e.params);e.each(i=>r(i,t.nodes)),s.push(t)}else if(e.type==="comment"){if(e.text.charCodeAt(0)!==Y)return;s.push(v(e.text))}}let n=[];return o.each(e=>r(e,n)),n}import{normalizePath as F}from"@tailwindcss/node";import C from"node:path";var E="'",R='"';function T(){let o=new WeakSet;function r(n){let e=n.root().source?.input.file;if(!e)return;let s=n.source?.input.file;if(!s||o.has(n))return;let t=n.params[0],i=t[0]===R&&t[t.length-1]===R?R:t[0]===E&&t[t.length-1]===E?E:null;if(!i)return;let l=n.params.slice(1,-1),c="";if(l.startsWith("!")&&(l=l.slice(1),c="!"),!l.startsWith("./")&&!l.startsWith("../"))return;let p=C.posix.join(F(C.dirname(s)),l),x=C.posix.dirname(F(e)),d=C.posix.relative(x,p);d.startsWith(".")||(d="./"+d),n.params=i+c+d+i,o.add(n)}return{postcssPlugin:"tailwindcss-postcss-fix-relative-paths",Once(n){n.walkAtRules(/source|plugin|config/,r)}}}var a=ee.DEBUG,w=new J({maxSize:50});function le(o,r){let n=`${o}:${r.base??""}:${JSON.stringify(r.optimize)}`;if(w.has(n))return w.get(n);let e={mtimes:new Map,compiler:null,scanner:null,tailwindCssAst:[],cachedPostCssAst:b.root(),optimizedPostCssAst:b.root(),fullRebuildPaths:[]};return w.set(n,e),e}function oe(o={}){let r=o.base??process.cwd(),n=o.optimize??process.env.NODE_ENV==="production";return{postcssPlugin:"@tailwindcss/postcss",plugins:[T(),{postcssPlugin:"tailwindcss",async Once(e,{result:s}){var O=[];try{let t=L(O,new te);let i=s.opts.from??"";a&&t.start(`[@tailwindcss/postcss] ${M(r,i)}`);{a&&t.start("Quick bail check");let f=!0;if(e.walkAtRules(u=>{if(u.name==="import"||u.name==="reference"||u.name==="theme"||u.name==="variant"||u.name==="config"||u.name==="plugin"||u.name==="apply")return f=!1,!1}),f)return;a&&t.end("Quick bail check")}let l=le(i,o);let c=m.dirname(m.resolve(i));async function p(){a&&t.start("Setup compiler"),l.fullRebuildPaths.length>0&&!x&&se(l.fullRebuildPaths),l.fullRebuildPaths=[],a&&t.start("PostCSS AST -> Tailwind CSS AST");let f=D(e);a&&t.end("PostCSS AST -> Tailwind CSS AST"),a&&t.start("Create compiler");let u=await Z(f,{base:c,shouldRewriteUrls:!0,onDependency:h=>{l.fullRebuildPaths.push(h)}});return a&&t.end("Create compiler"),a&&t.end("Setup compiler"),u}let x=l.compiler===null;l.compiler??=await p();if(l.compiler.features===P.None)return;let d="incremental";a&&t.start("Register full rebuild paths");{for(let u of l.fullRebuildPaths)s.messages.push({type:"dependency",plugin:"@tailwindcss/postcss",file:m.resolve(u),parent:s.opts.from});let f=s.messages.flatMap(u=>u.type!=="dependency"?[]:u.file);f.push(i);for(let u of f){let h=ne.statSync(u,{throwIfNoEntry:!1})?.mtimeMs??null;if(h===null){u===i&&(d="full");continue}l.mtimes.get(u)!==h&&(d="full",l.mtimes.set(u,h))}}a&&t.end("Register full rebuild paths");d==="full"&&!x&&(l.compiler=await p());if(l.scanner===null||d==="full"){a&&t.start("Setup scanner");let f=(l.compiler.root==="none"?[]:l.compiler.root===null?[{base:r,pattern:"**/*"}]:[l.compiler.root]).concat(l.compiler.globs);l.scanner=new re({sources:f}),a&&t.end("Setup scanner")}a&&t.start("Scan for candidates");let _=l.compiler.features&P.Utilities?l.scanner.scan():[];a&&t.end("Scan for candidates");if(l.compiler.features&P.Utilities){a&&t.start("Register dependency messages");for(let f of l.scanner.files)s.messages.push({type:"dependency",plugin:"@tailwindcss/postcss",file:m.resolve(f),parent:s.opts.from});for(let{base:f,pattern:u}of l.scanner.globs)u==="*"&&r===f||(u===""?s.messages.push({type:"dependency",plugin:"@tailwindcss/postcss",file:m.resolve(f),parent:s.opts.from}):s.messages.push({type:"dir-dependency",plugin:"@tailwindcss/postcss",dir:m.resolve(f),glob:u,parent:s.opts.from}));a&&t.end("Register dependency messages")}a&&t.start("Build utilities");let S=l.compiler.build(_);a&&t.end("Build utilities");if(l.tailwindCssAst!==S)if(n){a&&t.start("Optimization"),a&&t.start("AST -> CSS");let f=K(S);a&&t.end("AST -> CSS"),a&&t.start("Lightning CSS");let u=ae(f,{minify:typeof n=="object"?n.minify:!0});a&&t.end("Lightning CSS"),a&&t.start("CSS -> PostCSS AST"),l.optimizedPostCssAst=b.parse(u,s.opts),a&&t.end("CSS -> PostCSS AST"),a&&t.end("Optimization")}else a&&t.start("Transform Tailwind CSS AST into PostCSS AST"),l.cachedPostCssAst=W(S,e.source),a&&t.end("Transform Tailwind CSS AST into PostCSS AST");l.tailwindCssAst=S;a&&t.start("Update PostCSS AST");e.removeAll();e.append(n?l.optimizedPostCssAst.clone().nodes:l.cachedPostCssAst.clone().nodes);e.raws.indent="  ";a&&t.end("Update PostCSS AST");a&&t.end(`[@tailwindcss/postcss] ${M(r,i)}`)}catch(B){var z=B,Q=!0}finally{V(O,z,Q)}}}]}}function ae(o,{file:r="input.css",minify:n=!1}={}){function e(s){return ie({filename:r,code:s,minify:n,sourceMap:!1,drafts:{customMedia:!0},nonStandard:{deepSelectorCombinator:!0},include:y.Nesting,exclude:y.LogicalProperties|y.DirSelector|y.LightDark,targets:{safari:16<<16|1024,ios_saf:16<<16|1024,firefox:8388608,chrome:7274496},errorRecovery:!0}).code}return e(e(Buffer.from(o))).toString()}var Xe=Object.assign(oe,{postcss:!0});export{Xe as default};
